{"ast":null,"code":"import { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { environment } from '../../environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let HomeService = /*#__PURE__*/(() => {\n  class HomeService {\n    constructor(http) {\n      this.http = http;\n      this.apiUrl = environment.apiUrl + '/Library';\n    }\n    getToken() {\n      return localStorage.getItem('token') || sessionStorage.getItem('token');\n    }\n    getBooks() {\n      const token = this.getToken();\n      const headers = new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`\n      });\n      return this.http.get(this.apiUrl, {\n        headers\n      }).pipe(catchError(this.handleError));\n    }\n    addBook(bookData) {\n      const token = this.getToken();\n      const headers = new HttpHeaders().set('Authorization', `Bearer ${token}`);\n      return this.http.post(this.apiUrl, bookData, {\n        headers,\n        reportProgress: true,\n        observe: 'events'\n      }).pipe(catchError(error => {\n        console.error('Error adding book:', error);\n        return throwError(() => new Error('Failed to add book'));\n      }));\n    }\n    deleteBook(id) {\n      const token = this.getToken();\n      const headers = new HttpHeaders().set('Authorization', `Bearer ${token}`);\n      return this.http.delete(`${this.apiUrl}/${id}`, {\n        headers\n      }).pipe(catchError(error => {\n        console.error('Error deleting book:', error);\n        return throwError(() => new Error('Failed to delete book'));\n      }));\n    }\n    handleError(error) {\n      let errorMessage = 'An error occurred while processing your request.';\n      if (error.error instanceof ErrorEvent) {\n        errorMessage = `Error: ${error.error.message}`;\n      } else {\n        errorMessage = `Error ${error.status}: ${error.message}`;\n      }\n      console.error('API call error:', error);\n      return throwError(() => new Error(errorMessage));\n    }\n    getBookById(bookId) {\n      const token = localStorage.getItem('token') || sessionStorage.getItem('token'); // Verifică tokenul\n      const headers = new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}` // Adaugă tokenul în antet\n      });\n      return this.http.get(`${this.apiUrl}/books/${bookId}`, {\n        headers\n      }).pipe(catchError(error => {\n        console.error('Error fetching book:', error);\n        return throwError(() => new Error('Failed to fetch book details'));\n      }));\n    }\n    updateBook(bookId, formData) {\n      const token = this.getToken();\n      const headers = new HttpHeaders({\n        'Authorization': `Bearer ${token}`\n      });\n      return this.http.put(`${this.apiUrl}/books/${bookId}`, formData, {\n        headers: headers,\n        observe: 'events'\n      }).pipe(catchError(error => {\n        console.error('Error updating book:', error);\n        return throwError(() => new Error('Failed to update book'));\n      }));\n    }\n    searchBooks(title, author, year, category) {\n      let params = new HttpParams();\n      if (title) params = params.append('title', title);\n      if (author) params = params.append('author', author);\n      if (year) params = params.append('year', year);\n      if (category) params = params.append('category', category);\n      return this.http.get(`${this.apiUrl}/search`, {\n        params\n      });\n    }\n    static #_ = this.ɵfac = function HomeService_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || HomeService)(i0.ɵɵinject(i1.HttpClient));\n    };\n    static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: HomeService,\n      factory: HomeService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return HomeService;\n})();","map":{"version":3,"names":["HttpClient","HttpHeaders","HttpParams","throwError","catchError","environment","HomeService","constructor","http","apiUrl","getToken","localStorage","getItem","sessionStorage","getBooks","token","headers","get","pipe","handleError","addBook","bookData","set","post","reportProgress","observe","error","console","Error","deleteBook","id","delete","errorMessage","ErrorEvent","message","status","getBookById","bookId","updateBook","formData","put","searchBooks","title","author","year","category","params","append","_","i0","ɵɵinject","i1","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\laura\\Desktop\\ProjectAngular.Net\\MyLibrary\\UI\\library.web\\src\\app\\services\\home.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { Book } from '../models/book.model';\r\nimport { environment } from '../../environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class HomeService {\r\n  private apiUrl = environment.apiUrl + '/Library';\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  private getToken(): string | null {\r\n    return localStorage.getItem('token') || sessionStorage.getItem('token');\r\n  }\r\n\r\n  getBooks(): Observable<Book[]> {\r\n    const token = this.getToken();\r\n    const headers = new HttpHeaders({\r\n      'Content-Type': 'application/json',\r\n      'Authorization': `Bearer ${token}`\r\n    });\r\n    return this.http.get<Book[]>(this.apiUrl, { headers }).pipe(\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n\r\n  addBook(bookData: FormData): Observable<any> {\r\n    const token = this.getToken();\r\n    const headers = new HttpHeaders().set('Authorization', `Bearer ${token}`);\r\n    return this.http.post(this.apiUrl, bookData, { headers, reportProgress: true, observe: 'events' }).pipe(\r\n      catchError(error => {\r\n        console.error('Error adding book:', error);\r\n        return throwError(() => new Error('Failed to add book'));\r\n      })\r\n    );\r\n  }\r\n\r\n  deleteBook(id: number): Observable<void> {\r\n    const token = this.getToken();\r\n    const headers = new HttpHeaders().set('Authorization', `Bearer ${token}`);\r\n    return this.http.delete<void>(`${this.apiUrl}/${id}`, { headers }).pipe(\r\n      catchError(error => {\r\n        console.error('Error deleting book:', error);\r\n        return throwError(() => new Error('Failed to delete book'));\r\n      })\r\n    );\r\n  }\r\n\r\n  private handleError(error: any) {\r\n    let errorMessage = 'An error occurred while processing your request.';\r\n    if (error.error instanceof ErrorEvent) {\r\n      errorMessage = `Error: ${error.error.message}`;\r\n    } else {\r\n      errorMessage = `Error ${error.status}: ${error.message}`;\r\n    }\r\n    console.error('API call error:', error);\r\n    return throwError(() => new Error(errorMessage));\r\n  }\r\n\r\n  getBookById(bookId: string): Observable<Book> {\r\n    const token = localStorage.getItem('token') || sessionStorage.getItem('token'); // Verifică tokenul\r\n    const headers = new HttpHeaders({\r\n      'Content-Type': 'application/json',\r\n      'Authorization': `Bearer ${token}` // Adaugă tokenul în antet\r\n    });\r\n    return this.http.get<Book>(`${this.apiUrl}/books/${bookId}`, { headers }).pipe(\r\n      catchError(error => {\r\n        console.error('Error fetching book:', error);\r\n        return throwError(() => new Error('Failed to fetch book details'));\r\n      })\r\n    );\r\n  }\r\n\r\n  updateBook(bookId: string, formData: FormData): Observable<any> {\r\n    const token = this.getToken();\r\n    const headers = new HttpHeaders({\r\n      'Authorization': `Bearer ${token}`\r\n    });\r\n  \r\n    return this.http.put(`${this.apiUrl}/books/${bookId}`, formData, {\r\n      headers: headers,\r\n      observe: 'events'\r\n    }).pipe(\r\n      catchError(error => {\r\n        console.error('Error updating book:', error);\r\n        return throwError(() => new Error('Failed to update book'));\r\n      })\r\n    );\r\n  }\r\n\r\n  searchBooks(title: string, author: string, year: string, category: string): Observable<Book[]> {\r\n    let params = new HttpParams();\r\n    if (title) params = params.append('title', title);\r\n    if (author) params = params.append('author', author);\r\n    if (year) params = params.append('year', year);\r\n    if (category) params = params.append('category', category);\r\n  \r\n    return this.http.get<Book[]>(`${this.apiUrl}/search`, { params });\r\n  }\r\n}"],"mappings":"AACA,SAASA,UAAU,EAAEC,WAAW,EAAEC,UAAU,QAAQ,sBAAsB;AAC1E,SAAqBC,UAAU,QAAQ,MAAM;AAC7C,SAASC,UAAU,QAAQ,gBAAgB;AAE3C,SAASC,WAAW,QAAQ,gCAAgC;;;AAK5D,WAAaC,WAAW;EAAlB,MAAOA,WAAW;IAGtBC,YAAoBC,IAAgB;MAAhB,KAAAA,IAAI,GAAJA,IAAI;MAFhB,KAAAC,MAAM,GAAGJ,WAAW,CAACI,MAAM,GAAG,UAAU;IAET;IAE/BC,QAAQA,CAAA;MACd,OAAOC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,IAAIC,cAAc,CAACD,OAAO,CAAC,OAAO,CAAC;IACzE;IAEAE,QAAQA,CAAA;MACN,MAAMC,KAAK,GAAG,IAAI,CAACL,QAAQ,EAAE;MAC7B,MAAMM,OAAO,GAAG,IAAIf,WAAW,CAAC;QAC9B,cAAc,EAAE,kBAAkB;QAClC,eAAe,EAAE,UAAUc,KAAK;OACjC,CAAC;MACF,OAAO,IAAI,CAACP,IAAI,CAACS,GAAG,CAAS,IAAI,CAACR,MAAM,EAAE;QAAEO;MAAO,CAAE,CAAC,CAACE,IAAI,CACzDd,UAAU,CAAC,IAAI,CAACe,WAAW,CAAC,CAC7B;IACH;IAEAC,OAAOA,CAACC,QAAkB;MACxB,MAAMN,KAAK,GAAG,IAAI,CAACL,QAAQ,EAAE;MAC7B,MAAMM,OAAO,GAAG,IAAIf,WAAW,EAAE,CAACqB,GAAG,CAAC,eAAe,EAAE,UAAUP,KAAK,EAAE,CAAC;MACzE,OAAO,IAAI,CAACP,IAAI,CAACe,IAAI,CAAC,IAAI,CAACd,MAAM,EAAEY,QAAQ,EAAE;QAAEL,OAAO;QAAEQ,cAAc,EAAE,IAAI;QAAEC,OAAO,EAAE;MAAQ,CAAE,CAAC,CAACP,IAAI,CACrGd,UAAU,CAACsB,KAAK,IAAG;QACjBC,OAAO,CAACD,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;QAC1C,OAAOvB,UAAU,CAAC,MAAM,IAAIyB,KAAK,CAAC,oBAAoB,CAAC,CAAC;MAC1D,CAAC,CAAC,CACH;IACH;IAEAC,UAAUA,CAACC,EAAU;MACnB,MAAMf,KAAK,GAAG,IAAI,CAACL,QAAQ,EAAE;MAC7B,MAAMM,OAAO,GAAG,IAAIf,WAAW,EAAE,CAACqB,GAAG,CAAC,eAAe,EAAE,UAAUP,KAAK,EAAE,CAAC;MACzE,OAAO,IAAI,CAACP,IAAI,CAACuB,MAAM,CAAO,GAAG,IAAI,CAACtB,MAAM,IAAIqB,EAAE,EAAE,EAAE;QAAEd;MAAO,CAAE,CAAC,CAACE,IAAI,CACrEd,UAAU,CAACsB,KAAK,IAAG;QACjBC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;QAC5C,OAAOvB,UAAU,CAAC,MAAM,IAAIyB,KAAK,CAAC,uBAAuB,CAAC,CAAC;MAC7D,CAAC,CAAC,CACH;IACH;IAEQT,WAAWA,CAACO,KAAU;MAC5B,IAAIM,YAAY,GAAG,kDAAkD;MACrE,IAAIN,KAAK,CAACA,KAAK,YAAYO,UAAU,EAAE;QACrCD,YAAY,GAAG,UAAUN,KAAK,CAACA,KAAK,CAACQ,OAAO,EAAE;MAChD,CAAC,MAAM;QACLF,YAAY,GAAG,SAASN,KAAK,CAACS,MAAM,KAAKT,KAAK,CAACQ,OAAO,EAAE;MAC1D;MACAP,OAAO,CAACD,KAAK,CAAC,iBAAiB,EAAEA,KAAK,CAAC;MACvC,OAAOvB,UAAU,CAAC,MAAM,IAAIyB,KAAK,CAACI,YAAY,CAAC,CAAC;IAClD;IAEAI,WAAWA,CAACC,MAAc;MACxB,MAAMtB,KAAK,GAAGJ,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,IAAIC,cAAc,CAACD,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC;MAChF,MAAMI,OAAO,GAAG,IAAIf,WAAW,CAAC;QAC9B,cAAc,EAAE,kBAAkB;QAClC,eAAe,EAAE,UAAUc,KAAK,EAAE,CAAC;OACpC,CAAC;MACF,OAAO,IAAI,CAACP,IAAI,CAACS,GAAG,CAAO,GAAG,IAAI,CAACR,MAAM,UAAU4B,MAAM,EAAE,EAAE;QAAErB;MAAO,CAAE,CAAC,CAACE,IAAI,CAC5Ed,UAAU,CAACsB,KAAK,IAAG;QACjBC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;QAC5C,OAAOvB,UAAU,CAAC,MAAM,IAAIyB,KAAK,CAAC,8BAA8B,CAAC,CAAC;MACpE,CAAC,CAAC,CACH;IACH;IAEAU,UAAUA,CAACD,MAAc,EAAEE,QAAkB;MAC3C,MAAMxB,KAAK,GAAG,IAAI,CAACL,QAAQ,EAAE;MAC7B,MAAMM,OAAO,GAAG,IAAIf,WAAW,CAAC;QAC9B,eAAe,EAAE,UAAUc,KAAK;OACjC,CAAC;MAEF,OAAO,IAAI,CAACP,IAAI,CAACgC,GAAG,CAAC,GAAG,IAAI,CAAC/B,MAAM,UAAU4B,MAAM,EAAE,EAAEE,QAAQ,EAAE;QAC/DvB,OAAO,EAAEA,OAAO;QAChBS,OAAO,EAAE;OACV,CAAC,CAACP,IAAI,CACLd,UAAU,CAACsB,KAAK,IAAG;QACjBC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;QAC5C,OAAOvB,UAAU,CAAC,MAAM,IAAIyB,KAAK,CAAC,uBAAuB,CAAC,CAAC;MAC7D,CAAC,CAAC,CACH;IACH;IAEAa,WAAWA,CAACC,KAAa,EAAEC,MAAc,EAAEC,IAAY,EAAEC,QAAgB;MACvE,IAAIC,MAAM,GAAG,IAAI5C,UAAU,EAAE;MAC7B,IAAIwC,KAAK,EAAEI,MAAM,GAAGA,MAAM,CAACC,MAAM,CAAC,OAAO,EAAEL,KAAK,CAAC;MACjD,IAAIC,MAAM,EAAEG,MAAM,GAAGA,MAAM,CAACC,MAAM,CAAC,QAAQ,EAAEJ,MAAM,CAAC;MACpD,IAAIC,IAAI,EAAEE,MAAM,GAAGA,MAAM,CAACC,MAAM,CAAC,MAAM,EAAEH,IAAI,CAAC;MAC9C,IAAIC,QAAQ,EAAEC,MAAM,GAAGA,MAAM,CAACC,MAAM,CAAC,UAAU,EAAEF,QAAQ,CAAC;MAE1D,OAAO,IAAI,CAACrC,IAAI,CAACS,GAAG,CAAS,GAAG,IAAI,CAACR,MAAM,SAAS,EAAE;QAAEqC;MAAM,CAAE,CAAC;IACnE;IAAC,QAAAE,CAAA,G;uCA5FU1C,WAAW,EAAA2C,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAnD,UAAA;IAAA;IAAA,QAAAoD,EAAA,G;aAAX9C,WAAW;MAAA+C,OAAA,EAAX/C,WAAW,CAAAgD,IAAA;MAAAC,UAAA,EAFV;IAAM;;SAEPjD,WAAW;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}