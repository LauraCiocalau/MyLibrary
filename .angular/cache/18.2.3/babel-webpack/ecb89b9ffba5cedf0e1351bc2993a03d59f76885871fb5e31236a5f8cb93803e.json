{"ast":null,"code":"import { HttpRequest, HttpHandler, HttpEvent } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nexport let AuthInterceptor = /*#__PURE__*/(() => {\n  class AuthInterceptor {\n    intercept(req, next) {\n      // Retrieve the token from localStorage or another storage mechanism\n      const token = localStorage.getItem('token') || sessionStorage.getItem('token');\n      // Clone the request to add the Authorization header if the token is available\n      const authReq = token ? req.clone({\n        setHeaders: {\n          Authorization: `Bearer ${token}`\n        }\n      }) : req;\n      // Pass the cloned request instead of the original request to the next handler.\n      return next.handle(authReq);\n    }\n    static #_ = this.ɵfac = function AuthInterceptor_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || AuthInterceptor)();\n    };\n    static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: AuthInterceptor,\n      factory: AuthInterceptor.ɵfac\n    });\n  }\n  return AuthInterceptor;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}