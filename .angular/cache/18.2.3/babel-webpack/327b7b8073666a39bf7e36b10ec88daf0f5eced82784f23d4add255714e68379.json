{"ast":null,"code":"import { __decorate, __metadata } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { FormBuilder, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { AuthService } from '../../services/auth.service';\nimport { Router, RouterOutlet, ActivatedRoute, RouterModule } from '@angular/router';\nimport { HomeService } from '../../services/home.service';\nimport { CarouselComponent } from '../carousel/carousel.component';\nlet LandingPageComponent = class LandingPageComponent {\n  constructor(fb, authService, router, homeService,\n  // Adaugă HomeService aici\n  route) {\n    this.fb = fb;\n    this.authService = authService;\n    this.router = router;\n    this.homeService = homeService;\n    this.route = route;\n    this.loginSubmitted = false;\n    this.registerSubmitted = false;\n    this.errorMessage = null;\n    this.successMessage = null;\n    this.loginForm = this.fb.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required]],\n      rememberMe: [false]\n    });\n    this.registerForm = this.fb.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required, Validators.minLength(6)]],\n      confirmPassword: ['', [Validators.required, Validators.minLength(6)]],\n      userName: ['', [Validators.required]]\n    }, {\n      validator: this.passwordsMatchValidator\n    });\n  }\n  login() {\n    this.loginSubmitted = true;\n    if (this.loginForm.valid) {\n      const loginModel = {\n        email: this.loginForm.value.email,\n        password: this.loginForm.value.password,\n        rememberMe: this.loginForm.value.rememberMe\n      };\n      this.authService.onLogin(loginModel).subscribe(response => {\n        console.log('Login successful', response);\n        this.errorMessage = null;\n        this.router.navigateByUrl('home-page');\n      }, error => {\n        this.errorMessage = 'Invalid email or password';\n      });\n    }\n  }\n  register() {\n    this.registerSubmitted = true;\n    if (this.registerForm.valid) {\n      const registerModel = {\n        email: this.registerForm.value.email,\n        password: this.registerForm.value.password,\n        confirmPassword: this.registerForm.value.confirmPassword,\n        userName: this.registerForm.value.userName\n      };\n      this.authService.register(registerModel).subscribe(response => {\n        console.log('Registration successful', response);\n        this.successMessage = `Account created successfully!<br> You can log in now.`;\n        // Add a delay before navigating to home page to show the message\n        setTimeout(() => {\n          this.router.navigateByUrl('home-page');\n        }, 5000); // Adjust the delay time as needed\n      }, error => {\n        console.error('Registration error:', error);\n        this.errorMessage = error.error?.message || 'Registration failed. Please try again.';\n      });\n    }\n  }\n  passwordsMatchValidator(form) {\n    const password = form.get('password')?.value;\n    const confirmPassword = form.get('confirmPassword')?.value;\n    return password === confirmPassword ? null : {\n      mismatch: true\n    };\n  }\n  navigateToForgotPassword(event) {\n    console.log('Navigating to forgot password');\n    this.router.navigateByUrl('forgot-password');\n  }\n  ngAfterViewInit() {\n    const signInBtnLink = document.querySelector('.signInBtn-link');\n    const signUpBtnLink = document.querySelector('.signUpBtn-link');\n    const wrapper = document.querySelector('.wrapper');\n    signUpBtnLink?.addEventListener('click', () => {\n      wrapper?.classList.toggle('active');\n    });\n    signInBtnLink?.addEventListener('click', () => {\n      wrapper?.classList.toggle('active');\n    });\n  }\n};\nLandingPageComponent = __decorate([Component({\n  selector: 'app-landing-page',\n  standalone: true,\n  templateUrl: './landing-page.component.html',\n  styleUrls: ['./landing-page.component.css'],\n  imports: [ReactiveFormsModule, CommonModule, RouterOutlet, RouterModule, CarouselComponent]\n}), __metadata(\"design:paramtypes\", [FormBuilder, AuthService, Router, HomeService, ActivatedRoute])], LandingPageComponent);\nexport { LandingPageComponent };","map":{"version":3,"names":["Component","FormBuilder","ReactiveFormsModule","Validators","CommonModule","AuthService","Router","RouterOutlet","ActivatedRoute","RouterModule","HomeService","CarouselComponent","LandingPageComponent","constructor","fb","authService","router","homeService","route","loginSubmitted","registerSubmitted","errorMessage","successMessage","loginForm","group","email","required","password","rememberMe","registerForm","minLength","confirmPassword","userName","validator","passwordsMatchValidator","login","valid","loginModel","value","onLogin","subscribe","response","console","log","navigateByUrl","error","register","registerModel","setTimeout","message","form","get","mismatch","navigateToForgotPassword","event","ngAfterViewInit","signInBtnLink","document","querySelector","signUpBtnLink","wrapper","addEventListener","classList","toggle","__decorate","selector","standalone","templateUrl","styleUrls","imports"],"sources":["C:\\Users\\laura\\Desktop\\ProjectAngular.Net\\MyLibrary\\UI\\library.web\\src\\app\\pages\\landing-page\\landing-page.component.ts"],"sourcesContent":["import { AfterViewInit, Component } from '@angular/core';\r\nimport { FormBuilder, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\r\nimport { CommonModule } from '@angular/common';\r\nimport { AuthService } from '../../services/auth.service';\r\nimport { Router, RouterOutlet, ActivatedRoute, RouterModule } from '@angular/router';\r\nimport { RegisterRequest } from '../../models/register.model';\r\nimport { LoginRequest } from '../../models/login.model';\r\nimport { HomeService } from '../../services/home.service';\r\nimport { CarouselComponent } from '../carousel/carousel.component';\r\n\r\n@Component({\r\n  selector: 'app-landing-page',\r\n  standalone: true,\r\n  templateUrl: './landing-page.component.html',\r\n  styleUrls: ['./landing-page.component.css'],\r\n  imports: [ReactiveFormsModule, CommonModule, RouterOutlet, RouterModule, CarouselComponent]\r\n})\r\nexport class LandingPageComponent implements AfterViewInit {\r\n\r\n  loginSubmitted = false;\r\n  registerSubmitted = false;\r\n  loginForm: FormGroup;\r\n  registerForm: FormGroup;\r\n  errorMessage: string | null = null;\r\n  successMessage: string | null = null;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private authService: AuthService,\r\n    private router: Router,\r\n    private homeService: HomeService, // Adaugă HomeService aici\r\n    private route: ActivatedRoute \r\n  ) {\r\n    this.loginForm = this.fb.group({\r\n      email: ['', [Validators.required, Validators.email]],\r\n      password: ['', [Validators.required]],\r\n      rememberMe: [false],\r\n    });\r\n  \r\n    this.registerForm = this.fb.group({\r\n      email: ['', [Validators.required, Validators.email]],\r\n      password: ['', [Validators.required, Validators.minLength(6)]],\r\n      confirmPassword: ['', [Validators.required, Validators.minLength(6)]],\r\n      userName: ['', [Validators.required]]\r\n    }, { validator: this.passwordsMatchValidator });\r\n  }\r\n\r\n  login(): void {\r\n    this.loginSubmitted = true;\r\n    if (this.loginForm.valid) {\r\n      const loginModel: LoginRequest = {\r\n        email: this.loginForm.value.email,\r\n        password: this.loginForm.value.password,\r\n        rememberMe: this.loginForm.value.rememberMe\r\n      };\r\n  \r\n      this.authService.onLogin(loginModel).subscribe(\r\n        response => {\r\n          console.log('Login successful', response);\r\n          this.errorMessage = null;\r\n          this.router.navigateByUrl('home-page');\r\n        },\r\n        error => {\r\n          this.errorMessage = 'Invalid email or password';\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  register(): void {\r\n  this.registerSubmitted = true;\r\n  if (this.registerForm.valid) {\r\n      const registerModel: RegisterRequest = {\r\n          email: this.registerForm.value.email,\r\n          password: this.registerForm.value.password,\r\n          confirmPassword: this.registerForm.value.confirmPassword,\r\n          userName: this.registerForm.value.userName\r\n      };\r\n\r\n      this.authService.register(registerModel).subscribe(\r\n        response => {\r\n            console.log('Registration successful', response);\r\n            this.successMessage = `Account created successfully!<br> You can log in now.`;\r\n            // Add a delay before navigating to home page to show the message\r\n            setTimeout(() => {\r\n                this.router.navigateByUrl('home-page');\r\n            }, 5000); // Adjust the delay time as needed\r\n        },\r\n        error => {\r\n            console.error('Registration error:', error);\r\n            this.errorMessage = error.error?.message || 'Registration failed. Please try again.';\r\n        }\r\n    );\r\n  }\r\n}\r\n\r\n  passwordsMatchValidator(form: FormGroup) {\r\n    const password = form.get('password')?.value;\r\n    const confirmPassword = form.get('confirmPassword')?.value;\r\n    return password === confirmPassword ? null : { mismatch: true };\r\n  }\r\n\r\n  navigateToForgotPassword(event: Event): void {\r\n    console.log('Navigating to forgot password');\r\n    this.router.navigateByUrl('forgot-password');\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    const signInBtnLink = document.querySelector('.signInBtn-link');\r\n    const signUpBtnLink = document.querySelector('.signUpBtn-link');\r\n    const wrapper = document.querySelector('.wrapper');\r\n\r\n    signUpBtnLink?.addEventListener('click', () => {\r\n      wrapper?.classList.toggle('active');\r\n    });\r\n\r\n    signInBtnLink?.addEventListener('click', () => {\r\n      wrapper?.classList.toggle('active');\r\n    });\r\n  }\r\n\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}